function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return

function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return

function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return

function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return

function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return

function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return

function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return

function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
not
if-goto ELSE135
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto END135
label ELSE135
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label END135
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return

function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
not
if-goto ELSE136
push this 4
push this 5
add
pop this 4
goto END136
label ELSE136
push this 4
push this 6
add
pop this 4
push this 9
not
if-goto ELSE137
push this 7
not
if-goto ELSE138
push this 0
push constant 4
add
pop this 0
goto END138
label ELSE138
push this 1
push constant 4
add
pop this 1
label END138
goto END137
label ELSE137
push this 7
not
if-goto ELSE139
push this 0
push constant 4
sub
pop this 0
goto END139
label ELSE139
push this 1
push constant 4
sub
pop this 1
label END139
label END137
label END136
push this 8
not
if-goto ELSE140
push this 7
not
if-goto ELSE141
push this 1
push constant 4
add
pop this 1
goto END141
label ELSE141
push this 0
push constant 4
add
pop this 0
label END141
goto END140
label ELSE140
push this 7
not
if-goto ELSE142
push this 1
push constant 4
sub
pop this 1
goto END142
label ELSE142
push this 0
push constant 4
sub
pop this 0
label END142
label END140
push this 0
push this 10
gt
not
not
if-goto END143
push constant 1
pop this 14
push this 10
pop this 0
label END143
push this 0
push this 11
lt
not
not
if-goto END144
push constant 2
pop this 14
push this 11
pop this 0
label END144
push this 1
push this 12
gt
not
not
if-goto END145
push constant 3
pop this 14
push this 12
pop this 1
label END145
push this 1
push this 13
lt
not
not
if-goto END146
push constant 4
pop this 14
push this 13
pop this 1
label END146
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return

function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
not
if-goto ELSE147
push constant 10
pop local 4
goto END147
label ELSE147
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
not
if-goto ELSE148
push constant 20
pop local 4
goto END148
label ELSE148
push constant 5
pop local 4
label END148
label END147
push this 14
push constant 1
eq
not
if-goto ELSE149
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto END149
label ELSE149
push this 14
push constant 2
eq
not
if-goto ELSE150
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto END150
label ELSE150
push this 14
push constant 3
eq
not
if-goto ELSE151
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto END151
label ELSE151
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label END151
label END150
label END149
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return

